---
title: "Error Analysis"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(tidymodels)
library(here)
library(gt)
library(glmnet)
library(ggrepel)
library(glue)
source(here("6. Modelling","glmnet_functions.R"))
```

Selected models : vote differnce from cluster averages, demographics difference from cluster averages (cluster-cluster)

load data and split like in model training

## cluster based model

```{r}
dataset <- read_csv(here("4. Data","consolidated_cluster.csv"))      |>
           filter(election_year!=2022)                       |>
           select(-any_of(c("Metro_Area")))              |>
            mutate(across(where(is.numeric), ~ replace_na(.x,0)))


clusters <- read_csv(here("4. Data","clusters.csv"))         |>
            select(-any_of(c("Metro_Area")))


dataset <- dataset |>
           left_join(clusters,by=c("DivisionNm"="DivisionNm","election_year"="Year"))

rm(clusters)

party_cols <- c("GRN","ALP","COAL","Other")

vote <- dataset |> select(DivisionNm,Year,election_year,StateAb,Metro,cluster,all_of(party_cols))

nationals <- read_csv(here("4. Data","cluster_values.csv")) |>
             pivot_longer(-c(Year,cluster),
                          names_to = "Attribute",values_to="National") |>
             mutate(Attribute=str_replace_all(Attribute," - ","_"),
                    Attribute=str_replace_all(Attribute,"-","_"),
                    Attribute=str_squish(Attribute),
                    Attribute=str_replace_all(Attribute," ","_")) 


rest <- dataset |> 
        select(-all_of(party_cols)) |>
        select(-Metro,-StateAb,-election_year) |>
         pivot_longer(-c(DivisionNm,Year,cluster),
               names_to = "Attribute",values_to = "CED") |>
         mutate(Year=as.numeric(Year))                   |>
         left_join(nationals,
            by=c("Year","Attribute","cluster")) |>
          select(-cluster) |>
          mutate(Value=CED-National,.keep="unused") |>
          pivot_wider(names_from = Attribute, values_from = Value)


dataset <- vote |>
           left_join(rest,by=c("DivisionNm","Year")) |>
           mutate(Division=str_c(DivisionNm,"-",election_year),.keep="unused") |>
          select(-any_of(c("Year","Household_Semi_detached"))) |>
          select(-any_of(c("StateAb","Metro")))


set.seed(24644)
split <- split_dataset(dataset,train_perc = 0.8,id_col = "Division")


id_col <- "Division"




```

Load models' parameters and train them

```{r}
parameters <- list()

for(i in 1:3){
  parameters[[i]] <-readRDS(here("6. Modelling","elastic_net_eval",
                                 glue("cluster_delta_cluster_cluster{i-1}.rds"))) |>
      filter(RMSE_Overall==min(RMSE_Overall))
}
names(parameters) <- 0:2

```

```{r}

models <- list()
predictions <- tibble()

for(i in c(1:3)){
  cluster_nbr <- i-1

  predictors <- parameters[[i]]$coefs[[1]] |>
                filter(str_detect(covariate,"Intercept",TRUE)) |>
                pull(covariate)
  
  training <- split$training |> filter(cluster==cluster_nbr)
  testing  <- split$testing  |> filter(cluster==cluster_nbr)
  
  x.train <- training |>  column_to_rownames(id_col) |>  select(all_of(predictors)) 
  x.train <- model.matrix( ~ .+1, data = x.train)
  x.test  <- testing |>   column_to_rownames(id_col) |> select(all_of(predictors)) 
  x.test  <- model.matrix( ~ .+1, data = x.test)
  
  y.train <-  training |>  column_to_rownames(id_col) |>  select(all_of(party_cols)) |> as.matrix()
  y.test  <-  testing  |> select(all_of(party_cols),Division)  
  
  models[[i]] <- glmnet(x.train,y.train,
                        family = "mgaussian",
                        lambda = parameters[[i]][1,]$lambda ,
                        alpha =  parameters[[i]][1,]$alpha)
  
 pred <- predict(models[[i]], x.test) |>
    as_tibble(rownames="Division") |>
    pivot_longer(-Division,names_to = "partyAb",values_to = "prediction") |>
    mutate(partyAb=str_remove_all(partyAb,"\\.s0")) |>
    left_join(y.test |> pivot_longer(-Division,names_to = "partyAb",values_to = "actual"),
              by=c("Division","partyAb")) |>
    mutate(error=prediction-actual,
           .keep="unused") |>
   mutate(cluster=cluster_nbr)
  
 predictions <- bind_rows(predictions,pred)
 
}
```

Error plotted

```{r}
predictions |>
  mutate(cluster=as.character(cluster))|>
  ggplot(aes(x=error,colour=cluster))   +
  geom_histogram()          +
  facet_grid(partyAb~cluster)
```

```{r}
write_csv(predictions,here("6. Modelling","elastic_net_eval","predictions_cluster.rds"))
```

## state based model

```{r}
dataset <- read_csv(here("4. Data","consolidated_state.csv"))      |>
           filter(election_year!=2022)                       |>
           select(-any_of(c("Metro_Area")))              |>
            mutate(across(where(is.numeric), ~ replace_na(.x,0)))


clusters <- read_csv(here("4. Data","clusters.csv"))         |>
            select(-any_of(c("Metro_Area")))


dataset <- dataset |>
           left_join(clusters,by=c("DivisionNm"="DivisionNm","election_year"="Year"))

rm(clusters)

party_cols <- c("GRN","ALP","COAL","Other")

vote <- dataset |> select(DivisionNm,Year,election_year,StateAb,Metro,cluster,all_of(party_cols))

nationals <- read_csv(here("4. Data","state_values.csv")) |>
             filter(Year!=2021) |>
             pivot_longer(-c(Year,StateAb),
                          names_to = "Attribute",values_to="National") |>
             mutate(Attribute=str_replace_all(Attribute," - ","_"),
                    Attribute=str_replace_all(Attribute,"-","_"),
                    Attribute=str_squish(Attribute),
                    Attribute=str_replace_all(Attribute," ","_")) 


rest <- dataset |> 
        select(-all_of(party_cols)) |>
        select(-Metro,-cluster) |>
         pivot_longer(-c(DivisionNm,Year,StateAb,election_year),
               names_to = "Attribute",values_to = "CED") |>
         mutate(Year=as.numeric(Year))                   |>
         left_join(nationals,
            by=c("Year","Attribute","StateAb")) |>
          select(-StateAb) |>
          mutate(Value=CED-National,.keep="unused") |>
          pivot_wider(names_from = Attribute, values_from = Value)


dataset <- vote |>
           left_join(rest,by=c("DivisionNm","Year","election_year")) |>
           mutate(Division=str_c(DivisionNm,"-",election_year),.keep="unused") |>
          select(-any_of(c("Year","Household_Semi_detached"))) |>
          select(-any_of(c("StateAb","Metro")))




set.seed(24644)
split <- split_dataset(dataset,train_perc = 0.8,id_col = "Division")


id_col <- "Division"

y.train <-  split$training |>  column_to_rownames(id_col) |>  select(all_of(party_cols)) |> as.matrix()
y.test  <-  split$testing  |> select(all_of(party_cols),Division)  


```

Load models' parameters and train them

```{r}
parameters <- list()

for(i in 1:3){
  parameters[[i]] <-readRDS(here("6. Modelling","elastic_net_eval",
                                 glue("cluster_delta_state_state{i-1}.rds"))) |>
      filter(RMSE_Overall==min(RMSE_Overall))
}
names(parameters) <- 0:2

```

(covariate)

```{r}

models <- list()
predictions <- tibble()

for(i in c(1:3)){
  cluster_nbr <- i-1

  predictors <- parameters[[i]]$coefs[[1]] |>
                filter(str_detect(covariate,"Intercept",TRUE)) |>
                pull(covariate)
  
  training <- split$training |> filter(cluster==cluster_nbr)
  testing  <- split$testing  |> filter(cluster==cluster_nbr)
  
  x.train <- training |>  column_to_rownames(id_col) |>  select(all_of(predictors)) 
  x.train <- model.matrix( ~ .+1, data = x.train)
  x.test  <- testing |>   column_to_rownames(id_col) |> select(all_of(predictors)) 
  x.test  <- model.matrix( ~ .+1, data = x.test)
  
  y.train <-  training |>  column_to_rownames(id_col) |>  select(all_of(party_cols)) |> as.matrix()
  y.test  <-  testing  |> select(all_of(party_cols),Division)  
  
  models[[i]] <- glmnet(x.train,y.train,
                        family = "mgaussian",
                        lambda = parameters[[i]][1,]$lambda ,
                        alpha =  parameters[[i]][1,]$alpha)
  
 pred <- predict(models[[i]], x.test) |>
    as_tibble(rownames="Division") |>
    pivot_longer(-Division,names_to = "partyAb",values_to = "prediction") |>
    mutate(partyAb=str_remove_all(partyAb,"\\.s0")) |>
    left_join(y.test |> pivot_longer(-Division,names_to = "partyAb",values_to = "actual"),
              by=c("Division","partyAb")) |>
    mutate(error=prediction-actual,
           .keep="unused") |>
   mutate(cluster=cluster_nbr)
  
 predictions <- bind_rows(predictions,pred)
 
}
```

Error plotted

```{r}
predictions |>
  mutate(cluster=as.character(cluster))|>
  ggplot(aes(x=error,colour=cluster))   +
  geom_histogram()          +
  facet_grid(partyAb~cluster)
```

```{r}
predictions |>
  mutate(cluster=as.character(cluster))|>
  ggplot(aes(x=error,colour=cluster))   +
  geom_histogram()          +
  facet_grid(partyAb~cluster)+
  xlim(-20,20)
```

```{r}
write_csv(predictions,here("6. Modelling","elastic_net_eval","predictions_state.rds"))
```
