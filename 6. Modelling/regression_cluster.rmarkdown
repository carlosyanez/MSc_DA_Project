---
title: "Regression"
editor: visual
params:
  cluster: 0
format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-location: left
    df-print: paged
---


# Setup and load data


```{r}
library(tidyverse)
library(tidymodels)
library(here)
library(gt)
library(glmnet)
library(ggrepel)
source(here("6. Modelling","glmnet_functions.R"))
```

```{r}
cluster <- params$cluster


```


# Cluster `r cluster`


```{r}
dataset <- read_csv(here("4. Data","consolidated.csv"))      |>
           filter(election_year!=2022)                       |>
           select(-any_of(c("Metro_Area","Year")))              |>
           mutate(Division = str_c(DivisionNm,"-",election_year),
                  .keep="unused",.before=1)                  |>
            mutate(across(where(is.numeric), ~ replace_na(.x,0)))


clusters <- read_csv(here("4. Data","clusters.csv"))         |>
            mutate(Division = str_c(DivisionNm,"-",Year),
                             .keep="unused")                 |>
            select(-any_of(c("Metro_Area")))


dataset <- dataset |>
           left_join(clusters,by="Division")

rm(clusters)

party_cols <- c("GRN","ALP","COAL","Other")

dataset <- dataset |>
          filter(cluster==cluster) |>
          select(-any_of(c("cluster")))



dataset |>
  count(Metro,StateAb) |>
  pivot_wider(names_from = StateAb,values_from = n) |>
  gt() |>
  gt::data_color(columns = 2:9,palette = c("yellow","orange"),
                 domain = c(0,100))


dataset <- dataset |>
          select(-any_of(c("StateAb","Metro")))

```

```{r}
set.seed(24644)
split <- split_dataset(dataset,train_perc = 0.8,id_col = "Division")

```

```{r}
lasso_selection <-  lasso_selection(split,"Division",party_cols)

```

```{r}
lambda_penalty_plot(lasso_selection$cv,lasso_selection$cv$lambda.1se,legend_y=20)
```

```{r}
p <- coef_plot(lasso_selection$cv)

p
```

```{r}
p <- coef_lollipop(lasso_selection$cv)
p
```

```{r}
coefficients <- extract_coefs(lasso_selection$cv)
coef_min_max <- coefficients |>
                pivot_longer(-variable,names_to="r",values_to = "value") |>
                summarise(min=min(value),max=max(value))





coefficients |>
  mutate(across(where(is.numeric),~round(.x,4)))|>
  gt() |>
  data_color(columns=where(is.numeric),
               colors = scales::col_bin(
      bins = c(-Inf, 0, Inf),
      palette = c("red", "green"),
    ))

```

```{r}
results <- assess_net(split,
           id_col="Division",
           alpha_grid = seq(0, 1, 0.002),
           responses= c("ALP","GRN","COAL","Other"),
           predictors=coefficients$variable,
           family = "mgaussian")
results
```

```{r}
enet_grid_plot(results)
```

```{r}
enet_folder <- fs::dir_create(here("6. Modelling","elastic_net_eval"))

saveRDS(enet_folder,fs::path(enet_folder,glue::glue("cluster{cluster}.rds")))

```

```{r}
results |> 
  mutate(min=(RMSE_Overall==min(RMSE_Overall))) |>
  filter(min)
```

```{r}
results |> 
  mutate(min=(RMSE_ALP==min(RMSE_ALP))) |>
  filter(min)
```

```{r}
results |> 
  mutate(min=(RMSE_COAL==min(RMSE_COAL))) |>
  filter(min)
```

```{r}
results |> 
  mutate(min=(RMSE_GRN==min(RMSE_GRN))) |>
  filter(min)
```

```{r}
results |> 
  mutate(min=(RMSE_Other==min(RMSE_Other))) |>
  filter(min)
```

