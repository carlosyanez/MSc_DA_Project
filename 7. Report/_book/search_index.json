[["index.html", "A Minimal Book Example Chapter 1 Acknowledgements", " A Minimal Book Example John Doe 2023-05-20 Chapter 1 Acknowledgements bookdown::serve_book() bookdown::render_book(&quot;index.Rmd&quot;, &quot;bookdown::pdf_book&quot;) "],["intro.html", "Chapter 2 Introduction", " Chapter 2 Introduction "],["strucure.html", "Chapter 3 Strucure", " Chapter 3 Strucure _ Problem statement - Obtaining the data - EDA - Modelling - Conclusions APPENDICES - HOW we waht the data obtained - Detailed EDa - TEchnical note on buulding packages - vignettes "],["references.html", "References", " References "],["data.html", "Chapter 4 Sourcing Data 4.1 Extracting data", " Chapter 4 Sourcing Data Based on the previously explained approach, data had to be source from 2 main sources: The Australian Electoral Commission (AEC). The AEC contains detailed online records for all federal election held in the 21st century, through their Tally Room websites. All data is presented in CSV format and it is publicly and easily accessible. The Australian Bureau of Statistics (ABS). The ABS provides an extensive repository of statistical data. This project is using Census Data, which is available through their Census Data packs. In both cases, the data provided is of high quality, trustable and provided in open formats. However, three particular challenges arose: There is a large volume of data: multiple political parties, +100 electoral divisions and a very large number of statistical data collected in each census. Not all publicly available Census data is provided by electoral division. Aggregation from statistical collection areas into electorates is not straightforward due to a lack of 1:1 correspondence between the former (defined by the AEC) and the latter (defined by the ABS). Despite the best efforts of both organisations, names of electorates, parties, census attributes change over time, requiring work to track a variable across time. To better overcome those challenges in a repeatable way, three R packages have been created as part of this projects, namely: {auspol}, which extracts and presents electoral results. {auscensus}, which allows to interact with Census Data Packs to extract different statistics across geographical units, and across censuses. {aussiemaps}, which assists with aggregating census data into electoral divisions, by matching and apportioning different geographical structures. Each package is further detailed in the appendix. Using the above tools, the extraction pipeline can be represented by figure 4.1. Figure 4.1: Flow of data from sources to dataset The main points of the process are explained below. 4.1 Extracting data "],["references-1.html", "References", " References "],["references-2.html", "References", " References "],["appendix-extracting-data.html", "Chapter 5 (APPENDIX) Extracting Data 5.1 Package Architecture", " Chapter 5 (APPENDIX) Extracting Data A particular challenge for this project was to efficiently and systematically being able to extract data. In this particular case, data sources are public and freely made available by Australian government departments. However, there were two challenging aspects, namely: The volume of data, especially when it comes to Census Data. This also presented a challenge in terms of selection and aggregation of data not presented at electorate level. Changes in file structure and naming convention across time, having to standardise variable names across different census and election years. The search for existing data packages did not produce satisfactory results - only a package to retrieve historical weather data was found ({cropgrowdays}(Baker and Mortlock 2021)). Therefore, as par of this project it was necessary to create the following R packages: {auspol}, a data package with containing voting tallies for the Australian House of Representatives. This package contains processed data, sourced from the Australian Electoral Commission, as well as functions to access and plot them. In addition to primary votes (the scope for this project), this also contains preferential distribution tallies. {auscensus}, a package to interact with Census Data Packs (as published by the Australian Bureau of Statistics, ABS). This package does not contain the actual data - each data pack ranges from 600 to 800 MB. {aussiemaps}, which is a rewriting of a geospatial package experiment by the author. This package contains geographical boundaries for ABS statistical structures as well as non-ABS geographies such as electoral divisions. In this project, this package is use to aggregate data from granular statistical structures to electorates. 5.1 Package Architecture The three packages have been designed using the same approach, which can be summarised by the following: Data is not included in the packages, but hosted on GitHub repositories. Given the large size of the data files, they cannot be directly included along code and they are shared “releases”instead. Then, the package functions download data as needed. This applies for metadata for the three packages and the actual data for {auspol} and {aussiemaps}. References "],["appendix-auscensus-vignette.html", "Chapter 6 (APPENDIX) {auscensus} Vignette", " Chapter 6 (APPENDIX) {auscensus} Vignette Extracted from https://carlosyanez.github.io/auscensus/articles/complex_case.html on Sunday 22 January 2023 This vignette shows a more complex use case of auscensus. Let’s assume we want to extract the percentage of Australian Citizens for all Commonwealth Electoral Divisions, as measured in last 4 Censuses (2006-2021). An initial exploration shows that this data can be found in table 01 (across all four censuses) - which provided an statistical summary. However, is not published aggregated by electorate across all censuses. ## # A tibble: 4 × 3 ## Year table_number CED ## &lt;chr&gt; &lt;chr&gt; &lt;lgl&gt; ## 1 2011 01 TRUE ## 2 2016 01 TRUE ## 3 2021 01 TRUE ## 4 2006 01 NA Therefore, we will retrieve the data from the lowest statistical unit. However, SA1 were not available in 2006 - where the smallest area was a “CD”. ## # A tibble: 4 × 4 ## Year table_number CD SA1 ## &lt;chr&gt; &lt;chr&gt; &lt;lgl&gt; &lt;lgl&gt; ## 1 2006 01 TRUE NA ## 2 2011 01 NA TRUE ## 3 2016 01 NA TRUE ## 4 2021 01 NA TRUE The next step is to figure the attributes for the numbers of Australian citizen and total population, which are presented below: ## # A tibble: 6 × 3 ## Table Attribute Year ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 01 Total Persons_males 2006 ## 2 01 Total Persons_females 2006 ## 3 01 Total Persons_persons 2006 ## 4 01 Age Groups: 0-4 Years_males 2006 ## 5 01 Age Groups: 0-4 Years_females 2006 ## 6 01 Age Groups: 0-4 Years_persons 2006 ## # A tibble: 4 × 5 ## Attribute `2006` `2011` `2016` `2021` ## &lt;chr&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;lgl&gt; ## 1 Australian Citizen_persons TRUE NA NA NA ## 2 Australian_citizen_persons NA TRUE TRUE TRUE ## 3 Total Persons_persons TRUE NA NA NA ## 4 Total_persons_persons NA TRUE TRUE TRUE Using attribute_tibble_to_list, this data frame can be converted into the required format. Now, we can cycle through the four censuses and extract the data. Please note that CDs and SA1s are not equivalent, but they are stored together for convenience: To aggregate the data, aussiemaps::geo_aggregate() can help using area to apportion on non-overalpping cases. Then, this package’s calculate_percentage() will take the totals from the list and calculate percentages. ## # A tibble: 601 × 6 ## Unit Year Attribute Value Total Percentage ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Adelaide 2006 Australian Citizens 115908 140151 82.7 ## 2 Aston 2006 Australian Citizens 115010 129463 88.8 ## 3 Ballarat 2006 Australian Citizens 118247 129221 91.5 ## 4 Banks 2006 Australian Citizens 104181 118371 88.0 ## 5 Barker 2006 Australian Citizens 133033 145410 91.5 ## 6 Barton 2006 Australian Citizens 105287 131234 80.2 ## 7 Bass 2006 Australian Citizens 85631 94270 90.8 ## 8 Batman 2006 Australian Citizens 105561 128107 82.4 ## 9 Bendigo 2006 Australian Citizens 121930 131885 92.5 ## 10 Bennelong 2006 Australian Citizens 104473 129340 80.8 ## # ℹ 591 more rows "],["appendix-auspol-vignette.html", "Chapter 7 (APPENDIX) {auspol} Vignette 7.1 What is this? 7.2 Getting the data 7.3 Plotting 7.4 Results for one election", " Chapter 7 (APPENDIX) {auspol} Vignette Extracted from https://carlosyanez.github.io/auspol/articles/house_primary_vote.html on Sunday 22 January 2023 auspol includes two functions to interact with the preference distribution data: get_house_primary_vote() house_primary_vote_summary() house_primary_comparison_plot() house_primary_historic_plot() 7.1 What is this? If you are unfamiliar with the Australian electoral system and preferential voting, please look at this [explainer(https://www.aec.gov.au/learn/preferential-voting.html) before proceeding. 7.2 Getting the data get_house_primary_vote() is the basic function to retrieve primary vote data published by the AEC. Without any arguments, it will deliver all the results for all elections, but it comes with parameters to facilitate filtering. For instance, to get the results for Brisbane for 2022: ## # A tibble: 344 × 17 ## Year StateAb DivisionID DivisionNm PollingPlaceID PollingPlace CandidateID Surname GivenNm BallotPosition Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; ## 1 2022 QLD 156 Brisbane 83397 Alderley 37204 KENNEDY Tiana 1 FALSE ## 2 2022 QLD 156 Brisbane 83397 Alderley 35972 KNUDSON Justin Marc 2 FALSE ## 3 2022 QLD 156 Brisbane 83397 Alderley 37338 BATES Stephen 3 TRUE ## 4 2022 QLD 156 Brisbane 83397 Alderley 37230 JARRETT Madonna 4 FALSE ## 5 2022 QLD 156 Brisbane 83397 Alderley 37482 EVANS Trevor 5 FALSE ## 6 2022 QLD 156 Brisbane 83397 Alderley 38213 HOLD Trevor 6 FALSE ## 7 2022 QLD 156 Brisbane 83397 Alderley 37311 BULL Anthony 7 FALSE ## 8 2022 QLD 156 Brisbane 83397 Alderley 999 Informal Informal 999 FALSE ## 9 2022 QLD 156 Brisbane 6017 Ascot 37204 KENNEDY Tiana 1 FALSE ## 10 2022 QLD 156 Brisbane 6017 Ascot 35972 KNUDSON Justin Marc 2 FALSE ## # ℹ 334 more rows ## # ℹ 6 more variables: HistoricElected &lt;lgl&gt;, PartyAb &lt;chr&gt;, PartyNm &lt;chr&gt;, OrdinaryVotes &lt;int&gt;, Swing &lt;dbl&gt;, SittingMemberFl &lt;lgl&gt; Both parameters can include more than one value, e.g. ## # A tibble: 712 × 17 ## Year StateAb DivisionID DivisionNm PollingPlaceID PollingPlace CandidateID Surname GivenNm BallotPosition Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; ## 1 2022 QLD 156 Brisbane 83397 Alderley 37204 KENNEDY Tiana 1 FALSE ## 2 2022 QLD 156 Brisbane 83397 Alderley 35972 KNUDSON Justin Marc 2 FALSE ## 3 2022 QLD 156 Brisbane 83397 Alderley 37338 BATES Stephen 3 TRUE ## 4 2022 QLD 156 Brisbane 83397 Alderley 37230 JARRETT Madonna 4 FALSE ## 5 2022 QLD 156 Brisbane 83397 Alderley 37482 EVANS Trevor 5 FALSE ## 6 2022 QLD 156 Brisbane 83397 Alderley 38213 HOLD Trevor 6 FALSE ## 7 2022 QLD 156 Brisbane 83397 Alderley 37311 BULL Anthony 7 FALSE ## 8 2022 QLD 156 Brisbane 83397 Alderley 999 Informal Informal 999 FALSE ## 9 2022 QLD 156 Brisbane 6017 Ascot 37204 KENNEDY Tiana 1 FALSE ## 10 2022 QLD 156 Brisbane 6017 Ascot 35972 KNUDSON Justin Marc 2 FALSE ## # ℹ 702 more rows ## # ℹ 6 more variables: HistoricElected &lt;lgl&gt;, PartyAb &lt;chr&gt;, PartyNm &lt;chr&gt;, OrdinaryVotes &lt;int&gt;, Swing &lt;dbl&gt;, SittingMemberFl &lt;lgl&gt; ## # A tibble: 1,783 × 17 ## Year StateAb DivisionID DivisionNm PollingPlaceID PollingPlace CandidateID Surname GivenNm BallotPosition Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; ## 1 2022 QLD 156 Brisbane 83397 Alderley 37204 KENNEDY Tiana 1 FALSE ## 2 2022 QLD 156 Brisbane 83397 Alderley 35972 KNUDSON Justin Marc 2 FALSE ## 3 2022 QLD 156 Brisbane 83397 Alderley 37338 BATES Stephen 3 TRUE ## 4 2022 QLD 156 Brisbane 83397 Alderley 37230 JARRETT Madonna 4 FALSE ## 5 2022 QLD 156 Brisbane 83397 Alderley 37482 EVANS Trevor 5 FALSE ## 6 2022 QLD 156 Brisbane 83397 Alderley 38213 HOLD Trevor 6 FALSE ## 7 2022 QLD 156 Brisbane 83397 Alderley 37311 BULL Anthony 7 FALSE ## 8 2022 QLD 156 Brisbane 83397 Alderley 999 Informal Informal 999 FALSE ## 9 2022 QLD 156 Brisbane 6017 Ascot 37204 KENNEDY Tiana 1 FALSE ## 10 2022 QLD 156 Brisbane 6017 Ascot 35972 KNUDSON Justin Marc 2 FALSE ## # ℹ 1,773 more rows ## # ℹ 6 more variables: HistoricElected &lt;lgl&gt;, PartyAb &lt;chr&gt;, PartyNm &lt;chr&gt;, OrdinaryVotes &lt;int&gt;, Swing &lt;dbl&gt;, SittingMemberFl &lt;lgl&gt; By default, the results are presented by polling place, with the possibility to aggregate them. ## # A tibble: 37 × 14 ## Year StateAb DivisionID DivisionNm CandidateID Surname GivenNm BallotPosition Elected HistoricElected PartyAb PartyNm ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2019 QLD 156 Brisbane 999 Informal Informal 999 FALSE FALSE Informal Informal ## 2 2019 QLD 156 Brisbane 32751 PERRY Anne 1 FALSE FALSE ON Pauline Hans… ## 3 2019 QLD 156 Brisbane 32946 NEWBURY Paul 6 FALSE FALSE ALP Australian L… ## 4 2019 QLD 156 Brisbane 32960 WHITTAKER Aaron 3 FALSE FALSE UAPP United Austr… ## 5 2019 QLD 156 Brisbane 33144 BARTLETT Andrew 4 FALSE FALSE GRN The Greens ## 6 2019 QLD 156 Brisbane 33206 EVANS Trevor 2 TRUE TRUE LNP Liberal Nati… ## 7 2019 QLD 156 Brisbane 33224 EMANUEL Kamala 7 FALSE FALSE SAL Socialist Al… ## 8 2019 QLD 156 Brisbane 33326 JEANNERET Rod 5 FALSE FALSE FACN FRASER ANNIN… ## 9 2019 WA 245 Perth 999 Informal Informal 999 FALSE FALSE Informal Informal ## 10 2019 WA 245 Perth 32155 PERKS Caroline 6 FALSE FALSE GRN The Greens (… ## # ℹ 27 more rows ## # ℹ 2 more variables: SittingMemberFl &lt;lgl&gt;, OrdinaryVotes &lt;int&gt; ## # A tibble: 12 × 17 ## Year StateAb DivisionID DivisionNm PollingPlaceID PollingPlace CandidateID Surname GivenNm BallotPosition Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; ## 1 2022 WA 245 Perth 8203 Yokine North 37417 BAILEY Cameron 1 FALSE ## 2 2022 WA 245 Perth 8203 Yokine North 36515 POWELL Dean 2 FALSE ## 3 2022 WA 245 Perth 8203 Yokine North 37748 CONNOR Sean 3 FALSE ## 4 2022 WA 245 Perth 8203 Yokine North 37803 VOS Dave 4 FALSE ## 5 2022 WA 245 Perth 8203 Yokine North 37233 SZMEKURA-MOOR Sarah 5 FALSE ## 6 2022 WA 245 Perth 8203 Yokine North 37327 GORMAN Patrick 6 TRUE ## 7 2022 WA 245 Perth 8203 Yokine North 37273 NICKOLS Evan 7 FALSE ## 8 2022 WA 245 Perth 8203 Yokine North 36507 EBERHART Sonya Michelle 8 FALSE ## 9 2022 WA 245 Perth 8203 Yokine North 36628 PERKS Caroline 9 FALSE ## 10 2022 WA 245 Perth 8203 Yokine North 36601 DWYER David 10 FALSE ## 11 2022 WA 245 Perth 8203 Yokine North 37290 GYURU Aiden 11 FALSE ## 12 2022 WA 245 Perth 8203 Yokine North 999 Informal Informal 999 FALSE ## # ℹ 6 more variables: HistoricElected &lt;lgl&gt;, PartyAb &lt;chr&gt;, PartyNm &lt;chr&gt;, OrdinaryVotes &lt;int&gt;, Swing &lt;dbl&gt;, SittingMemberFl &lt;lgl&gt; It is also possible to restrict the results to selected polling places Additionally, it is possible to select one or more states instead of a group of divisions, e.g.: ## # A tibble: 86 × 14 ## Year StateAb DivisionID DivisionNm CandidateID Surname GivenNm BallotPosition Elected HistoricElected PartyAb PartyNm ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2019 TAS 192 Bass 999 Informal Informal 999 FALSE FALSE Informal Informal ## 2 2019 TAS 192 Bass 32124 ARCHER Bridget 4 TRUE FALSE LP Liberal ## 3 2019 TAS 192 Bass 32327 HART Ross 2 FALSE TRUE ALP Australian … ## 4 2019 TAS 192 Bass 32379 WOODBURY Susan 3 FALSE FALSE AJP Animal Just… ## 5 2019 TAS 192 Bass 32399 COOPER Carl 7 FALSE FALSE NP The Nationa… ## 6 2019 TAS 192 Bass 32540 HALL Tom 1 FALSE FALSE GRN The Greens ## 7 2019 TAS 192 Bass 32545 ROARK Allan John 6 FALSE FALSE UAPP United Aust… ## 8 2019 TAS 192 Bass 33590 LAMBERT Todd 5 FALSE FALSE IND Independent ## 9 2019 TAS 193 Braddon 999 Informal Informal 999 FALSE FALSE Informal Informal ## 10 2019 TAS 193 Braddon 32094 BRAKEY Craig 2 FALSE FALSE IND Independent ## # ℹ 76 more rows ## # ℹ 2 more variables: SittingMemberFl &lt;lgl&gt;, OrdinaryVotes &lt;int&gt; It is also possible to filter results by one or more parties: ## # A tibble: 8 × 14 ## Year StateAb DivisionID DivisionNm CandidateID Surname GivenNm BallotPosition Elected HistoricElected PartyAb PartyNm ## &lt;dbl&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; &lt;chr&gt; ## 1 2019 NT 306 Lingiari 32740 SNOWDON Warren 1 TRUE TRUE ALP Australian L… ## 2 2019 NT 306 Lingiari 33045 PRICE Jacinta 6 FALSE FALSE CLP Country Libe… ## 3 2019 NT 307 Solomon 32743 GOSLING Luke John 1 TRUE TRUE ALP Australian L… ## 4 2019 NT 307 Solomon 33053 GANLEY Kathy 3 FALSE FALSE CLP Country Libe… ## 5 2022 NT 306 Lingiari 36968 RYAN Damien 1 FALSE FALSE CLP NT CLP ## 6 2022 NT 306 Lingiari 37286 SCRYMGOUR Marion 5 TRUE FALSE ALP A.L.P. ## 7 2022 NT 307 Solomon 36937 MACFARLANE Tina 4 FALSE FALSE CLP NT CLP ## 8 2022 NT 307 Solomon 37280 GOSLING Luke 3 TRUE TRUE ALP A.L.P. ## # ℹ 2 more variables: SittingMemberFl &lt;lgl&gt;, OrdinaryVotes &lt;int&gt; house_primary_vote_summary() builds on the basic function and summarises data . ## # A tibble: 8 × 11 ## Year StateAb DivisionNm PartyAb PartyNm OrdinaryVotes GivenNm Surname Percentage_with_Info…¹ Percentage Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 2022 QLD Brisbane AJP Animal Justice Party 1235 Tiana KENNEDY 1.65 1.68 FALSE ## 2 2022 QLD Brisbane ALP Australian Labor Party 20346 Madonna JARRETT 27.1 27.7 FALSE ## 3 2022 QLD Brisbane GRN Queensland Greens 20985 Stephen BATES 28.0 28.6 TRUE ## 4 2022 QLD Brisbane Informal Informal 1566 Inform… Inform… 2.09 2.13 FALSE ## 5 2022 QLD Brisbane LDP Liberal Democrats 1115 Anthony BULL 1.49 1.52 FALSE ## 6 2022 QLD Brisbane LNP Liberal National Party… 26801 Trevor EVANS 35.7 36.5 FALSE ## 7 2022 QLD Brisbane ON Pauline Hanson&#39;s One N… 1518 Trevor HOLD 2.02 2.07 FALSE ## 8 2022 QLD Brisbane UAPP United Australia Party 1430 Justin… KNUDSON 1.91 1.95 FALSE ## # ℹ abbreviated name: ¹​Percentage_with_Informal Using the previous filters, it is possible to get ad-hoc summaries, for instance - all the ALP votes in Queensland in 2022, or the historic Liberal vote in Franklin. ## # A tibble: 30 × 11 ## Year StateAb DivisionNm PartyAb PartyNm OrdinaryVotes GivenNm Surname Percentage_with_Info…¹ Percentage Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 2022 QLD Blair ALP Australian Labor Party 27323 Shayne NEUMANN 33.4 35.5 TRUE ## 2 2022 QLD Bonner ALP Australian Labor Party 20930 Tabatha YOUNG 29.3 30.0 FALSE ## 3 2022 QLD Bowman ALP Australian Labor Party 23196 Donisha DUFF 28.7 29.6 FALSE ## 4 2022 QLD Brisbane ALP Australian Labor Party 20346 Madonna JARRETT 27.1 27.7 FALSE ## 5 2022 QLD Capricornia ALP Australian Labor Party 20543 Russell ROBERT… 26.9 28.7 FALSE ## 6 2022 QLD Dawson ALP Australian Labor Party 18921 Shane HAMILT… 23.8 24.9 FALSE ## 7 2022 QLD Dickson ALP Australian Labor Party 22988 Ali FRANCE 31.0 32.3 FALSE ## 8 2022 QLD Fadden ALP Australian Labor Party 18140 Letitia DEL FA… 21.7 22.8 FALSE ## 9 2022 QLD Fairfax ALP Australian Labor Party 18001 Sue FERGUS… 21.0 22.3 FALSE ## 10 2022 QLD Fisher ALP Australian Labor Party 19804 Judene ANDREWS 22.9 23.7 FALSE ## # ℹ 20 more rows ## # ℹ abbreviated name: ¹​Percentage_with_Informal ## # A tibble: 7 × 11 ## Year StateAb DivisionNm PartyAb PartyNm OrdinaryVotes GivenNm Surname Percentage_with_Informal Percentage Elected ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; ## 1 2004 TAS Franklin LP Liberal 21337 Henry FINNIS 37.6 39.0 FALSE ## 2 2007 TAS Franklin LP Liberal 22616 Vanessa GOODWIN 39.8 41.0 FALSE ## 3 2010 TAS Franklin LP Liberal 18386 Jane HOWLETT 32.0 33.3 FALSE ## 4 2013 TAS Franklin LP Liberal 21867 Bernadette BLACK 37.1 38.7 FALSE ## 5 2016 TAS Franklin LP Liberal 20754 Amanda-Sue MARKHAM 33.9 35.1 FALSE ## 6 2019 TAS Franklin LP Liberal 18591 Dean YOUNG 29.9 30.9 FALSE ## 7 2022 TAS Franklin LP Liberal 14374 Kristy Maree JOHNSON 24.5 25.9 FALSE 7.3 Plotting 7.3.1 Historic Trends The first plotting convenience function in this package allows comparing the evolution of primary voting across time. This function relies on house_primary_summary and uses many of its options. Its first use is to represent party trends in one electorate: As they can be many minor parties, it is sometimes useful just to focus on a number of parties. This function allows filtering by a number of parties or by filtering by the most voted in a certain year. In both cases, it is possible to consolidate others’ votes. Finally, it is possible to aggregate party acronyms - sometimes the same party has changed named or registered differently 7.4 Results for one election This package also contains a convenience function to look at the primary vote results for one division. Lile the previous function, this also inherits many of the attributes of get_house_primary_vote. The plots can also be displayed using bars, as shown below "],["appendix-aussiemaps-vignette.html", "Chapter 8 (APPENDIX) {aussiemaps} Vignette 8.1 {aussiemaps} - Yet another maps package 8.2 Getting started. 8.3 Filtering via regular expressions 8.4 Even more complex filtering 8.5 Aggregation 8.6 Data Aggregation", " Chapter 8 (APPENDIX) {aussiemaps} Vignette Extracted from https://carlosyanez.github.io/aussiemaps/articles/aussiemaps.html on Sunday 22 January 2023 8.1 {aussiemaps} - Yet another maps package This package has been built to facilitate the use of the geographic boundary files published by the Australian Bureau of Statistics (ABS). The ABS has published several boundary files - i.e. the Australian Statistical Geography Standard (ASGS) from 2006 onwards and the Australian Standard Geographical Classification (ASGC) before that - covering both: Statistical Geographic Structures created and maintained by the ABS - and used to collect data. Non-ABS structure, e.g Postal Areas, Electoral Divisions, LGA boundaries. This package has four versions of the above, aligned with Census years 2006, 2011,2016 and 2021. This makes it easy to mix use with Census data packs or the {auscensus} package. This package provides access to a processed version of those boundaries - as sf objects, allowing it to cater for the following scenarios: Get the boundaries of an electoral division across time. Get all the S1 or S1 areas within a Council area. Get all postcodes in a state or territory. This repository also contains the R script used to process the files. Although not tested, the functions could also accommodate BYO structures for other years. 8.2 Getting started. The core function of this package is get_map(), which retrieves the sf files. get_map provides several filters to narrow down the data retrieved and avoid getting everything unless is needed. The key parameters for this function are: How the data will be filtered (e.g. return only objects in a particular state, council or metro area) Which year/version of the data will be retrieved? Which aggregation will be used (e.g. which will be the resulting objects) Filters and column names follow the same name convention used in the original ABS files. The function list_attributes(), will present them in tibble format: ## # A tibble: 10 × 5 ## attributes `2006` `2011` `2016` `2021` ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 CD_CODE CD_CODE_2006 &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; ## 2 CED_CODE CED_CODE_2006 CED_CODE_2011 CED_CODE_2016 CED_CODE_2021 ## 3 CED_NAME CED_NAME_2006 CED_NAME_2011 CED_NAME_2016 CED_NAME_2021 ## 4 IARE_CODE IARE_CODE_2006 IARE_CODE_2011 IARE_CODE_2016 IARE_CODE_2021 ## 5 IARE_NAME IARE_NAME_2006 IARE_NAME_2011 IARE_NAME_2016 IARE_NAME_2021 ## 6 ILOC_CODE ILOC_CODE_2006 ILOC_CODE_2011 ILOC_CODE_2016 ILOC_CODE_2021 ## 7 ILOC_NAME ILOC_NAME_2006 ILOC_NAME_2011 ILOC_NAME_2016 ILOC_NAME_2021 ## 8 IREG_CODE IREG_CODE_2006 IREG_CODE_2011 IREG_CODE_2016 IREG_CODE_2021 ## 9 IREG_NAME IREG_NAME_2006 IREG_NAME_2011 IREG_NAME_2016 IREG_NAME_2021 ## 10 LGA_CODE LGA_CODE_2006 LGA_CODE_2011 LGA_CODE_2016 LGA_CODE_2021 Let’s say we want to retrieve all SA1 in the City of Melbourne for 2016 - this can be done via: 8.3 Filtering via regular expressions The filter arguments are intended to be regular expressions, for instance: ## Simple feature collection with 8 features and 3 fields ## Geometry type: POLYGON ## Dimension: XY ## Bounding box: xmin: 115.6286 ymin: -41.3658 xmax: 152.0004 ymax: -20.34465 ## Geodetic CRS: GDA94 ## SSC_NAME_2016 UCL_NAME_2016 STE_NAME_2016 geom ## 1 Prestons Sydney New South Wales POLYGON ((150.8737 -33.9276... ## 2 Preston (Toowoomba - Qld) Remainder of State/Territory (Qld) Queensland POLYGON ((151.9873 -27.6787... ## 3 Preston (Whitsunday - Qld) Remainder of State/Territory (Qld) Queensland POLYGON ((148.6227 -20.3747... ## 4 Preston (Tas.) Remainder of State/Territory (Tas.) Tasmania POLYGON ((146.0962 -41.2507... ## 5 South Preston Remainder of State/Territory (Tas.) Tasmania POLYGON ((146.0302 -41.3338... ## 6 Preston (Vic.) Melbourne Victoria POLYGON ((144.9798 -37.7427... ## 7 Preston Beach Remainder of State/Territory (WA) Western Australia POLYGON ((115.6492 -32.8839... ## 8 Preston Settlement Remainder of State/Territory (WA) Western Australia POLYGON ((116.117 -33.40392... Whereas ## Simple feature collection with 3 features and 3 fields ## Geometry type: POLYGON ## Dimension: XY ## Bounding box: xmin: 146.0066 ymin: -41.33851 xmax: 150.8979 ymax: -33.9263 ## Geodetic CRS: GDA94 ## SSC_NAME_2016 UCL_NAME_2016 STE_NAME_2016 geom ## 1 Prestons Sydney New South Wales POLYGON ((150.8737 -33.9276... ## 2 Preservation Bay Remainder of State/Territory (Tas.) Tasmania POLYGON ((146.0401 -41.0973... ## 3 Preston (Tas.) Remainder of State/Territory (Tas.) Tasmania POLYGON ((146.0962 -41.2507... 8.4 Even more complex filtering If more complex subsetting is needed, it is possible to pass a table with the elements to be selected. In order to do that, list_structure() comes to help. This function uses the same year and filters parameters than get_map() (actually this function calls the former if no table is provided). Once you have the dataset, you can use any ad-hoc filter to get the needed structures. For example ## Reading layer `cache_2021_b19261b4&#39; from data source `C:\\Users\\carlo\\OneDrive\\Documents\\.aussiemaps_cache\\cache_2021_b19261b4.gpkg&#39; using driver `GPKG&#39; ## Simple feature collection with 1 feature and 36 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: 149.9719 ymin: -34.33116 xmax: 151.6306 ymax: -32.99606 ## Geodetic CRS: GDA2020 8.5 Aggregation It is worth noticing that the aggregation parameter accepts more than one variable. Those parameters are passed to dplyr::group_by() before aggregation - thus more variables will impact how sf objects are aggregated. For instance, if we look at the postal areas (ABS approximation of a postcode) in the cities of Melbourne and Port Phillip: ## Using external data This package provides sf data, thus the result can be easily merged with any other data frame. Since data has been taken from the ABS and the output contains both names and codes of geographic structures, data can be joined using an un-ambiguous key. Furthermore, with {auscensus}, this package can be used as data filters to retrieve said data in the first place. For example: ## Reading layer `cache_2021_cdf7a1a8&#39; from data source `C:\\Users\\carlo\\OneDrive\\Documents\\.aussiemaps_cache\\cache_2021_cdf7a1a8.gpkg&#39; using driver `GPKG&#39; ## Simple feature collection with 15 features and 36 fields ## Geometry type: MULTIPOLYGON ## Dimension: XY ## Bounding box: xmin: 152.0734 ymin: -28.36387 xmax: 153.5467 ymax: -26.45233 ## Geodetic CRS: GDA2020 ## [1] 85 109 64 228 44 90 241 87 66 180 267 107 96 223 66 8.6 Data Aggregation As a bonus function, geo_aggregate() aggregates data, transforming between geographic structures. For instance, let’s imagine that for the previous case, it is only possible to get data by SA2. geo_aggregate() can aggregate the data to obtain an approximation for each electorate. When an SA1 is not fully contained by an electorate, the function will use the overlapping area as the weighting factor. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
